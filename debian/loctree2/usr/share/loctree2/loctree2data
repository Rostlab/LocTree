#!/usr/bin/perl -w
use strict;
use warnings;
use Carp qw| cluck :DEFAULT |;
use Getopt::Long qw(:config gnu_getopt auto_version auto_help);
use Pod::Usage;
BEGIN { our $VERSION = "1.0.9"; }

our $opt;
my $Lok = GetOptions( $opt = { debug => 0, datadir => '/usr/share/loctree2-data', 'data-version' => '1.0.2' }, 'debug!', 'datadir=s', 'data-version=s', 'keep-data-tar!', 'man!', 'quiet!' );
if( !$Lok ){ die("Invalid arguments, please check man page.\n"); }

my $dbg = $opt->{debug};

if( $opt->{man} ){ pod2usage(-verbose => 2); }

# Does version in $opt->{datadir}/dataversion.txt match package version?
my $pkg_data_ver = undef;
if( -f "$opt->{datadir}/dataversion.txt" )
{
    open( my $fh, '<', "$opt->{datadir}/dataversion.txt" ) || confess("Failed to open '$opt->{datadir}/dataversion.txt': $!");
    $pkg_data_ver = <$fh>; chomp($pkg_data_ver);
}

if( !$pkg_data_ver || $pkg_data_ver ne $opt->{'data-version'} )
{
    my $data_tar = "loctree2-data-$opt->{'data-version'}.tar.gz";
    my $data_url = "ftp://rostlab.org/free/$data_tar";
    my @sudo = ();

    eval {
        # wget it from $data_url
        { my @cmd = ( "/usr/bin/wget", $opt->{quiet} ? ('--quiet') : (), '--continue', '-O', "/tmp/$data_tar", $data_url ); if($dbg){warn("@cmd");} system(@cmd) && confess("Failed to execute @cmd: ".($?>>8)); }

        # create target directory
        {
            my @cmd = ( "/bin/mkdir", "-p", $opt->{datadir} );
            if($dbg){warn("@cmd");}
            if( system(@cmd) && $> != 0 )
            {
                @sudo = ('/usr/bin/sudo'); @cmd = ( @sudo, @cmd );
                if($dbg){warn("@cmd");}
                system(@cmd) && confess("Failed to execute @cmd: ".($?>>8));
            }
            if( !-w $opt->{datadir} && $> != 0 ){ @sudo = ('/usr/bin/sudo'); }
        }

        # untar
        { my @cmd = ( @sudo, "/bin/tar", "-xzf", "/tmp/$data_tar", $opt->{quiet} ? () : ('--verbose'), '--no-same-owner', '--no-same-permissions', "--strip-components=1", '-C', $opt->{datadir}, "--wildcards", 'loctree2-data-*/*.txt', '--exclude', 'Makefile*', 'loctree2-data-*/COPYING', 'loctree2-data-*/fast_model_*' ); if($dbg){warn("@cmd");} system(@cmd) && confess("Failed to execute @cmd: ".($?>>8)); }

        # remove
        if( !$opt->{'keep-data-tar'} ){ system( @sudo, '/bin/rm', '-f', "/tmp/$data_tar" ); }
    };
    if($@)
    {
        warn("loctree2 package data is missing from $opt->{datadir} and automatic retrieval failed. Please download it from $data_url and untar it to $opt->{datadir}.\n");
        warn("Since the download is restartable, you also can re-run this command '".join(' ', $0, @ARGV)."' to reattempt data download. The incomplete data file is in /tmp/$data_tar.\n");
        exit(1);
    }
}

exit(0);

=pod

=head1 NAME

loctree2data - tool to download data files needed by loctree2

=head1 SYNOPSIS

/usr/share/loctree2/loctree2data [OPTIONS]

/usr/share/loctree2/loctree2data --man

=head1 DESCRIPTION

loctree2data is a tool to download data files needed by loctree2(1).

=head1 OPTIONS

=over

=item --datadir

=item --data-version

=item --debug

=item --nodebug

=item --help

=item --keep-data-tar

=item --man

=item --quiet

=item --version

=back

=head1 AUTHOR

Laszlo Kajan <lkajan@rostlab.org>

=cut

# vim:et:ts=4:
